{"version":3,"sources":["./src/app/stock-stats.service.ts","./src/environments/environment.ts","./src/app/stocks-table/stocks-table.component.ts","./src/app/stocks-table/stocks-table.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/day-date/day-date.component.ts","./src/app/day-date/day-date.component.html","./src/app/app.module.ts","./src/app/day-number/day-number.component.ts","./src/app/day-number/day-number.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface StockStats {\n  fullName: string;\n  tickerSymbol: string;\n  initialValue: number;\n  currentValue: number;\n}\n\ninterface RemoveStockStats {\n  name: string;\n  symbol: string;\n  price: number;\n}\n\nconst STOCK_STATS_URL = 'https://staging-api.brainbase.com/stocks.php';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StockStatsService {\n  private initialStatsLoading: Promise<void>;\n  private stats: StockStats[][] = [];\n\n  constructor(private http: HttpClient) {\n    this.initialStatsLoading = this.loadInitialStats();\n  }\n\n  private async loadInitialStats() {\n    const serverData = await this.http.get(STOCK_STATS_URL, {\n      responseType: 'json'\n    }).toPromise() as RemoveStockStats[];\n    this.stats[0] = serverData.map((el) => ({\n      fullName: el.name,\n      tickerSymbol: el.symbol,\n      initialValue: el.price,\n      currentValue: el.price\n    }));\n  }\n\n  public async getStockStats(dayNumber: number): Promise<StockStats[]> {\n    if (dayNumber < 0) {\n      throw new Error(`Expected value above or equal to 0`);\n    }\n    if (Math.trunc(dayNumber) !== dayNumber) {\n      throw new Error('Expected value to be integer');\n    }\n    await this.initialStatsLoading;\n\n    for (let i = 1; i <= dayNumber; i++) {\n      this.stats[i] = this.stats[i - 1].map((el) => ({\n        ...el,\n        currentValue: (Math.random() > 0.5 ? 0.9 : 1.1) * el.currentValue\n      }))\n    }\n    return this.stats[dayNumber]\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input } from '@angular/core';\nimport { StockStats } from '../stock-stats.service';\n\n@Component({\n  selector: 'app-stocks-table',\n  templateUrl: './stocks-table.component.html',\n  styleUrls: ['./stocks-table.component.css']\n})\nexport class StocksTableComponent {\n  @Input() stats: StockStats[] = [];\n}\n","<style>\n/* https://dev.to/dcodeyt/creating-beautiful-html-tables-with-css-428l */\n.stocks-table {\n  border-collapse: collapse;\n  margin: 25px 0;\n  font-size: 0.9em;\n  font-family: sans-serif;\n  min-width: 400px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\n}\n\n.styled-table__header-line {\n  background-color: #009879;\n  color: #ffffff;\n  text-align: left;\n}\n\n.styled-table__header-cell,\n.styled-table__body-cell {\n  padding: 12px 15px;\n}\n\n.styled-table__body-line {\n    border-bottom: 1px solid #dddddd;\n}\n\n.styled-table__body-line:nth-of-type(even) {\n    background-color: #f3f3f3;\n}\n\n.styled-table__body-line:last-of-type {\n    border-bottom: 2px solid #009879;\n}\n\n.styled-table__body-line.growth {\n  color: darkgreen\n}\n\n.styled-table__body-line.loss {\n  color: darkred;\n}\n</style>\n\n<table class=\"stocks-table\">\n  <thead>\n    <tr class=\"styled-table__header-line\">\n      <th class=\"styled-table__header-cell\">Name</th>\n      <th class=\"styled-table__header-cell\">Symbol</th>\n      <th class=\"styled-table__header-cell\">Initial Price</th>\n      <th class=\"styled-table__header-cell\">Current Price</th>\n      <th class=\"styled-table__header-cell\">Diff $</th>\n      <th class=\"styled-table__header-cell\">Diff %</th>\n    </tr>\n  </thead>\n  <tbody>\n    <ng-template ngFor let-item [ngForOf]=\"stats\" let-i=\"index\" >\n      <tr class=\"styled-table__body-line\" [ngClass]=\"item.initialValue < item.currentValue ? 'growth' :item.initialValue > item.currentValue ? 'loss' : 'stable'\">\n        <td class=\"styled-table__body-cell\">{{item.fullName}}</td>\n        <td class=\"styled-table__body-cell\">{{item.tickerSymbol}}</td>\n        <td class=\"styled-table__body-cell\">{{item.initialValue}}</td>\n        <td class=\"styled-table__body-cell\">{{item.currentValue}}</td>\n        <td class=\"styled-table__body-cell\">{{(item.currentValue - item.initialValue).toFixed(2)}}</td>\n        <td class=\"styled-table__body-cell\">{{((item.currentValue - item.initialValue)*100/item.initialValue).toFixed(2)}}</td>\n      </tr>\n    </ng-template>\n  </tbody>\n</table>\n","import { Component } from '@angular/core';\nimport { StockStats, StockStatsService } from './stock-stats.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public dayCounter: number = 0;\n\n  public dayStats: StockStats[] = [];\n\n  public incDayCounter() {\n    this.dayCounter += 1;\n    this.handleDayCounterChange();\n  }\n\n  public decDayCounter() {\n    this.dayCounter = this.dayCounter > 0 ? this.dayCounter - 1 : this.dayCounter;\n    this.handleDayCounterChange();\n  }\n\n  private async handleDayCounterChange() {\n    this.dayStats = [];\n    this.dayStats = await this.stockStatsService.getStockStats(this.dayCounter);\n  }\n\n  constructor(private stockStatsService: StockStatsService) {\n    this.handleDayCounterChange(); // initial data\n  }\n}\n","<style>\n  .days-navigator {\n    display: flex;\n    width: 300px;\n  }\n\n  .days-navigator-item {\n    width: 33%;\n  }\n</style>\n\n<div class=\"days-navigator\">\n  <div class=\"days-navigator-item\"><button type=\"text\" class=\"btn btn-primary\" (click)=\"decDayCounter()\" *ngIf=\"dayCounter > 0\">Prev</button></div>\n  <div class=\"days-navigator-item\"><app-day-number [dayNumber]=\"dayCounter\"></app-day-number></div>\n  <div class=\"days-navigator-item\"><button type=\"text\" class=\"btn btn-primary\" (click)=\"incDayCounter()\">Next</button></div>\n</div>\n<app-stocks-table [stats]=\"dayStats\"></app-stocks-table>\n<app-day-date [dayNumber]=\"dayCounter\"></app-day-date>\n\n\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-day-date',\n  templateUrl: './day-date.component.html',\n  styleUrls: ['./day-date.component.css']\n})\nexport class DayDateComponent {\n  @Input() dayNumber: number = 0;\n\n  public getFormattedDate(): string {\n    const date = new Date(Date.now() + this.dayNumber * 24 * 60 * 60 * 1000);\n\n    // @todo: date string format seems custom, so check next line to adjust it\n    return date.toDateString();\n  }\n}\n","<div>\n  {{getFormattedDate()}}\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DayNumberComponent } from './day-number/day-number.component';\nimport { DayDateComponent } from './day-date/day-date.component';\nimport { StocksTableComponent } from './stocks-table/stocks-table.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DayNumberComponent,\n    DayDateComponent,\n    StocksTableComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-day-number',\n  templateUrl: './day-number.component.html',\n  styleUrls: ['./day-number.component.css']\n})\nexport class DayNumberComponent {\n  @Input() dayNumber: number = 0;\n}\n","<div>\n  Day {{dayNumber + 1}}\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}